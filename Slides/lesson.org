#+title: SEM: A Simulation Execution Manager for ns-3
#+author:
#+options: date:nil toc:nil


* Setup!

  This lesson requires some setup. We will download a new copy of ns-3, and use
  that one for the rest of this lab.

** Open up a terminal!

  #+begin_src bash
    cd
    git clone --recursive https://github.com/DvdMgr/sem-lab
    cd sem-lab
    ls -l
  #+end_src

* What is in this folder?

** This is what you should see in the sem-lab folder

  - ~ns-3~ :: Our new ns-3 installation folder
  - ~params~ :: Ignore this for now!
  - ~Slides~ :: Folder containing this lesson's slides
  - ~wifi-plot.m~ :: Octave script to plot the results of our simulations
  - ~wifi-sem.cc~ :: The ns-3 simulation script we will run

** Let's compile ns-3

  #+begin_src bash
    cd ns-3
    ./waf configure build
  #+end_src

* Summary of what ~wifi-sem.cc~ does

  - Creates a WiFi network
  - Provides a set of command line arguments we can use
    - Distance from AP
    - Number of devices
    - MCS
    - Using Request To Send (RTS)
    - Using Short Guard Interval (SGI)
    - Randomness of channel
  - Prints the throughput of the network

* Playing around with the wifi-sem script

  Try some arguments!

  #+begin_src bash
    ./waf --run "wifi-sem --useRts=False"
    ./waf --run "wifi-sem --useRts=True"
    ./waf --run "wifi-sem --mcs=3 --RngRun=1"
    ./waf --run "wifi-sem --mcs=3 --RngRun=2"
  #+end_src

* What is SEM?

  SEM is a Python library and program that allows you to:
  - Run multiple simulations in parallel from the command line
  - Export results to various formats (folders, MATLAB)
  - Perform both simulations and analysis from the same Python script

  SEM is already installed in your system:
  #+begin_src bash
    sem --help
  #+end_src

* Running the program with SEM

  Try it! /Make sure to be in the ~sem-lab~ folder for this (~cd ..~)./

  The ~sem run~ command can be used to run simulations:

  #+begin_src bash
    cd ..
    sem run --help
    sem run
  #+end_src

  Use [Value1, Value2, ...] to specify multiple values.

* Viewing results

  The ~sem view~ command can be used to view results of previously run
  simulations:

  #+begin_src bash
    sem view --help
  #+end_src

* Exporting results

  The export command can be used to export results:
  #+begin_src bash
    sem export --help
  #+end_src

  Let's export results to a nested folder structure:
  #+begin_src bash
    sem export results-directory
  #+end_src

* Exporting results to MATLAB and plotting

  Clean up your results folder with the ~rm -r res~ command.

  Run simulations using a pre-specified parameter space:

  #+begin_src bash
    sem run --parameters params
  #+end_src

  Export results to MATLAB data structure:

  #+begin_src bash
    sem export results.mat --results-dir res
  #+end_src

  Run the MATLAB script to plot results:

  #+begin_src bash
    octave --persist wifiplot.m
  #+end_src

* Exercise

  *Plot the throughput for increasing mcs and for every setting of SGI and RTS
  at a fixed distance.*

  - Reset your results directory
    #+begin_src bash
      rm -r res
    #+end_src
  - Make sure you run all the simulations you need
    - What values for MCS, SGI and RTS?
  - Export results
  - Modify ~wifiplot.m~ to create the new plot

  #+ATTR_LATEX: :width 0.5\textwidth
  [[file:mcssgirts.png]]

#+title: SEM: A Simulation Execution Manager for ns-3
#+author:
#+options: date:nil toc:nil


* Setup!

  This lesson requires some setup. We will download a new copy of ns-3, and use
  that one for the rest of this lab.

  Open up a terminal!

  #+begin_src bash
    cd
    git clone --recursive https://github.com/DvdMgr/sem-lab
  #+end_src

* What is in this folder?

  Let's take a look inside:

  #+begin_src bash
    cd sem-lesson
    ls
  #+end_src

  This is what you should see:

  - ~ns-3~ :: Our new ns-3 installation folder
  - ~wifi-sem.cc~ :: The ns-3 simulation script we will run
  - ~wifi-plot.m~ :: Octave script to plot the results of our simulations
  - ~Slides~ :: Folder containing this lesson's slides

* A look at our ns-3 simulation script

  There is a copy in ~ns-3/scratch~ already, no need to modify anything in the
  ~ns-3~ folder.

  Try it! This will also compile ns-3.

  #+begin_src bash
    cd ns-3
    ./waf --run wifi-sem
    cd ..
  #+end_src

* Summary of what ~wifi-sem.cc~ does

  - Creates a WiFi network
  - Provides a set of command line arguments we can use
    - Distance from AP
    - Number of devices
    - MCS
    - Using Request To Send (RTS)
    - Using Short Guard Interval (SGI)
    - Randomness of channel
  - Prints the throughput of the network

* What is SEM?

* Running the program with SEM

  Try it!

  #+begin_src bash
    sem run
  #+end_src

* Distance / MCS

  #+begin_src bash
    sem run --parameters params1
  #+end_src

  - distance: [1, 20, 40, 60]
  - mcs: [0, 3, 6]
  - nWifi: 1
  - useRts: False
  - useShortGuardInterval: False
  - randomChannel: False

  #+begin_src bash
  sem export results.mat --results-dir results
  #+end_src

* See the impact of random channel

  sem run --ns-3-path ns-3 --results-dir results --script wifi-sem --parameters params2

  distance: [1, 20, 40, 60]
  mcs: [0, 3, 6]
  nWifi: 1
  useRts: False
  useShortGuardInterval: False
  randomChannel: True

  sem export results.mat --results-dir results

* Exercise

  Plot the throughput for increasing mcs and for every setting of SGI and RTS
  at a fixed distance

* Point to the Github, explain they can contribute
